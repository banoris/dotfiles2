# This is what TERM will be inside the tmux session
# set-option -g default-terminal "screen-256color"
# set -g default-terminal "xterm-256color"

# This tells tmux to enable full colors if TERM outside is xterm-256color
# set-option -g terminal-overrides ",xterm-256color:RGB"

# X11 clipboard with remote ssh
# WORKS! Tested on Mac iterm2, ssh to linux, run tmux, run nvim
# NOTE: ensure tmux version is >2.3
# https://stackoverflow.com/questions/60309665/neovim-colorscheme-does-not-look-right-when-using-nvim-inside-tmux
# See also: https://github.com/neovim/neovim/wiki/FAQ, and neovim :checkhealth
set -g default-terminal "screen-256color"

# Auto update $DISPLAY when xorg server reconnects
# set-option -g update-environment " DISPLAY"

# Set env var to all panes

DISPLAY=:2

# Needs this line also to overrides the default color
set-option -ga terminal-overrides ",xterm-256color:RGB"

set -g pane-active-border-style fg=colour208,bg=default
set -g pane-border-lines heavy

# neovim :checkhealth suggestions
set-option -g focus-events on
set-option -sg escape-time 10

### Status bar ###

# https://stackoverflow.com/questions/28376611/how-to-automatically-rename-tmux-windows-to-the-current-directory
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
set-window-option -g window-status-current-style bg=yellow
set -g status-right ''
# More fancy, like: ** bash /home/user/ **
# set-window-option -g window-status-current-format '#[fg=white,bold]** #{window_index} #[fg=green]#{pane_current_command} #[fg=blue]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=white]**|' set-window-option -g window-status-format '#[fg=white,bold]#{window_index} #[fg=green]#{pane_current_command} #[fg=blue]#(echo "#{pane_current_path}" | rev | cut -d'/' -f-3 | rev) #[fg=white]|'

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# set -g default-command /bin/bash

# Enable activity monitor
setw -g monitor-activity on
set-window-option -ga window-status-activity-style fg=red,bg=white
# setw -g window-status-activity-bg red
# setw -g window-status-activity-fg yellow



#### Keybindings ####

# reload conf file
bind r source-file ~/.tmux.conf

# NOTE: April 27. C-Space is used as global keyboard shortcut for
#   changing language in Window. Also, doesn't work in Mac iterm2.
#   Fix for Mac: https://mattkirwancom.wordpress.com/2020/04/30/use-ctrl-space-tmux-prefix-keybind-macos/
# bind prefix to C-space. You also uses spacebar for leader in vim
# TODO: Oct 26: C-b clashes with vim and many CUI tools
#   2023-11-14: C-g. Sakit jari, tak ergonomic
#   2023-11-14: C-s.
unbind-key C-b
set -g prefix C-s
# set-option -g prefix C-Space
# send prefix key to application. E.g., k9s save file is `C-s`
# bind-key C-s send-prefix


# copy-mode with vi keybindings

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# mnemomic: v for visual mode, like vim
bind C-v copy-mode


# Adapted from casonadams/tmux-vi-navigation
# vi pane navigation
bind 'h' select-pane -L  # move left
bind 'j' select-pane -D  # move down
bind 'k' select-pane -U  # move up
bind 'l' select-pane -R  # move right

# pane resizing
bind -r 'H' resize-pane -L 5
bind -r 'J' resize-pane -D 5
bind -r 'K' resize-pane -U 5
bind -r 'L' resize-pane -R 5

# window creation/navigation
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window
bind c new-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind "|"  split-window -v -p 35 -c "#{pane_current_path}"

# Interactive tab switching in a session.
# https://github.com/tmux/tmux/issues/1115
bind-key w run-shell 'tmux choose-tree -Nwf"##{==:##{session_name},#{session_name}}" -F "##{window_name} ##{pane_current_path} (##{pane_current_command})"'
#bind-key w run-shell 'tmux choose-tree -Nf"#{==:#{session_name},#{current_session}}" -F "#{window_name} #{pane_current_path} (#{pane_current_command})"'


# https://superuser.com/questions/891915/interactive-search-of-tmux-sessions
# bind w split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"



# Swap tab left/right, like Ctrl-pageup/pagedown in browser
# Shift left/right-arrow key
bind -r S-Left swap-window -t -1\; select-window -t -1
bind -r S-Right swap-window -t +1\; select-window -t +1

#### Plugins ####
# set -g @plugin 'casonadams/tmux-vi-navigation'

# NOTE: keep this at the last line!
run -b '~/.tmux/plugins/tpm/tpm'
